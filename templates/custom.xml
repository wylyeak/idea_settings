<templateSet group="custom">
  <template name="getlogger" value="private static Logger logger = LoggerFactory.getLogger($TYPE$.class);" description="getlogger" toReformat="false" toShortenFQNames="true">
    <variable name="TYPE" expression="className()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_DECLARATION" value="true" />
    </context>
  </template>
  <template name="cpro" value="CallerInfo callerInfo = CallerInfo.start();&#10;try {&#10;    $SELECTION$&#10;} catch (RuntimeException e) {&#10;    callerInfo.markFail();&#10;    throw e;&#10;} finally {&#10;    callerInfo.end();&#10;}" description="Ump Profiler" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="testhead" value="@ContextConfiguration(locations = {&quot;classpath:spring-config.xml&quot;})&#10;@ContextConfiguration(classes = AppStart)&#10;@RunWith(SpringJUnit4ClassRunner.class)&#10;@SpringBootTest(classes = AppStart.class)&#10;@ActiveProfiles(&quot;dev&quot;)" description="Junit Test Head" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="GROOVY_DECLARATION" value="true" />
      <option name="JAVA_DECLARATION" value="true" />
    </context>
  </template>
  <template name="le" value="LoggerUtils.error(logger, this.getClass(), &quot;$methodName$&quot;, &quot;reson&quot;, &quot;desc&quot;,&#10;    $nv$);" shortcut="SPACE" description="logger.error" toReformat="true" toShortenFQNames="true">
    <variable name="methodName" expression="methodName()" defaultValue="" alwaysStopAt="true" />
    <variable name="nv" expression="groovyScript(&quot;_1.collect { param -&gt; 'NameValue.create(\&quot;' + param + '\&quot;, ' + param + ')'}.join(', ')&quot;, methodParameters())" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
</templateSet>